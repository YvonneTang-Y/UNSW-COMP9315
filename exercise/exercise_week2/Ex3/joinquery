select c.id,c.name
from   Customer c join Employee e on (c.id=e.id)

for each page in Customer {
   // request next C page
   for each page in Employee {
      // request next E page
      for each tuple c in Customer page {
         for each tuple e in Employee page
            { process one (c,e) pair }
      }
      // release E page
   }
   // release C page
}

Customer: 10 pages,   Employee: 4 pages

Pages requested
C0 then E0 E1 E2 E3
C1 then E0 E1 E2 E3
C2 then E0 E1 E2 E3
C3 then E0 E1 E2 E3
C4 then E0 E1 E2 E3
...
C9 then E0 E1 E2 E3


==========

With 2 buffers (no buffer pool)

read each page from Customer into one buffer
while Customer page held, read each Employee page

#reads = 10 (outer) + 10*4 (inner) = 50 reads

#reads = 4 (outer) + 4*10 (inner) = 44 reads


==========

With 3 buffers (no buffer pool)

read each page from Customer into one buffer
while Customer page held, read two Employee pages

#reads same as 2 buffers

read each page from Customer into two buffers
while Customer page held, read each Employee pages

#reads = 10 (outer) + 5*4 (inner) = 30 reads

#reads = 4 (outer) + 2*10 (inner) = 24 reads

==========

With 20 buffers

read each Customer page once
read each Employee page once

# reads = 10 + 4 = 14 reads


==========

Assume we have 3 Employee pages for simplicity

With n = 3 buffers and MRU strategy

Assume "most recent" = "most recently released"

Operation      Buffer Pool      Notes
               [0] [1] [2]

initially      _   _   _
request C0     C0  _   _
request E0	   C0  E0  _
process C0+E0
release E0                      MRU: E0
request E1     C0  E0  E1
process C0+E1
release E1                      MRU: E1 -> E0
request E2     C0  E0  E2
process C0+E2
release E2                      MRU: E2 -> E0
request E3     C0  E0  E3
process C0+E3
release E3     
release C0                      C0 is MRU
request C1     C1  E0  E3
request E0                      no read!
process C1+E0
release E0                      E0 is MRU
request E1     C1  E1  E3
process C1+E1
release E1                      E1 is MRU
request E2     C1  E2  E3
process C1+E2
release E2                      E2 is MRU
request E3                      no read!
process C1+E3
release E3                      E3 is MRU
release C1                      MRU: C1 -> E3 -> E0
request C2     C2  E2  E3       MRU: E3 -> E0
request E0     C2  E2  E0
process C2+E0
release E0                      MRU: E0 -> E2
etc. etc. etc.

#reads = ???  more than 14
